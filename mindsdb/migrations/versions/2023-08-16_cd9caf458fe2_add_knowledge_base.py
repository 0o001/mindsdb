"""add knowledge base

Revision ID: cd9caf458fe2
Revises: ad04ee0bd385
Create Date: 2023-08-16 14:16:03.586759

"""
import sqlalchemy as sa
from alembic import op

import mindsdb.interfaces.storage.db  # noqa: F401

# revision identifiers, used by Alembic.
revision = "cd9caf458fe2"
down_revision = "ad04ee0bd385"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "knowledge_base",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.String(),
            nullable=False,
            comment="The name of the knowledge base.",
        ),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("user_class", sa.Integer(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column(
            "_params",
            sa.JSON(),
            nullable=True,
            comment="Parameters used to create the knowledge base.",
        ),
        sa.Column("embedding_model_id", sa.Integer(), nullable=True),
        sa.Column("vector_database_id", sa.Integer(), nullable=True),
        sa.Column(
            "vector_database_table_name",
            sa.String(),
            nullable=False,
            comment="The name of the table in the vector database.",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["embedding_model_id"], ["predictor.id"], name="fk_embedding_integration_id"
        ),
        sa.ForeignKeyConstraint(
            ["vector_database_id"],
            ["integration.id"],
            name="fk_vectordatabase_integration_id",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "project_id", name="uniq_kb_name_project_id"),
    )
    with op.batch_alter_table("chat_bots_history", schema=None) as batch_op:
        batch_op.alter_column("chat_bot_id", existing_type=sa.INTEGER(), nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("chat_bots_history", schema=None) as batch_op:
        batch_op.alter_column("chat_bot_id", existing_type=sa.INTEGER(), nullable=False)

    op.drop_table("knowledge_base")
    # ### end Alembic commands ###
